name: WINDOWS_DOTNET

on:
  [push]

# CONFIGURATION
# For help, go to https://github.com/Azure/Actions
#
# 1. Set up the following secrets in your repository:
#   AZURE_FUNCTIONAPP_PUBLISH_PROFILE
#
# 2. Change these variables for your configuration:
env:
  AZURE_FUNCTIONAPP_NAME: dotnetFunctionApp
  AZURE_FUNCTIONAPP_PACKAGE_PATH: './tests/dotnet'
  DOTNET_VERSION: '2.2.402'

jobs:
  build-and-deploy:
    runs-on: windows-latest
    steps:
    - name: 'Checkout GitHub Action'
      uses: actions/checkout@master

    - name: Setup DotNet ${{ env.DOTNET_VERSION }} Environment
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: 'Resolve Project Dependencies Using Dotnet'
      shell: pwsh
      run: |
        pushd '${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}'
        dotnet build --configuration Release --output ./output
        popd
        
    - name: Azure Login
      uses: Azure/login@v1.1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: 'Run Azure Functions Action'
      uses: Azure/functions-action@v1
      id: fa
      with:
        app-name: ${{ env.AZURE_FUNCTIONAPP_NAME }}
        package: '${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}/output'
      #  publish-profile: ${{ secrets.WINDOWS_DOTNET }}

    - name: 'Report HttpTrigger Result'
      shell: pwsh
      run: |
        $i = 0
        while ($i -lt 10) {
          sleep 10
          $RESPONSE = $(curl "${{ steps.fa.outputs.app-url }}/api/HttpTrigger")
          $RESULT = ($RESPONSE -eq "AEIOU")
          if ($RESULT) {
            exit 0
          }
          $i = $i + 1
        }
        exit 1
# For more samples to get started with GitHub Action workflows to deploy to Azure, refer to https://github.com/Azure/actions-workflow-samples
